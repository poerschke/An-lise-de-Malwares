#!/usr/bin/perl
use bignum;
use integer;
# Autor: Douglas Poerschke Rocha


#54CFWJ1CDK6JVTRNR482PVD30RD7S51CD9F1D1C1PC15ZP12BXYWUVXY1;
#E81A2BC746CD1111223DBA48DB64FE0E0E668AFD0164DB01729EA3C5529DEF09165CD1191E49D1101B3242A9A8A774CFWJ1CDK6JVTRNR482PVD30RD7S51CD9F1D1C1PC15ZP12BXYW4567ACD;
#3849D46DE1698A8E99ACC741C351F37293D31B64EA7A90EA0A17295DE41B5BD56890ACC450BA52A2ACB63724CFWJ1CDK6JVTRNR482PVD30RD7S51CD9F1D1C1PC15ZP12BXYWKQ;
#FD70FA0F071953EE748DE065FD190612016F80FD69E96FFA749188E978E7000C0360E773F879
  
my $chave ='64CFWJ1CDK6JVTRNR482PVD30RD7S51CD9F1D1C1PC15ZP12BXYW126AJM';


my $cifrada = $ARGV[0];
my @cifra = split(//, $cifrada);
my $aux = $cifra[0].$cifra[1];
my $x = 2;
my @chars = split(//,$chave);
my @hexachave = ();
foreach my $char (@chars) {
	push(@hexachave, uc(unpack("H*", $char)));
}
my $y=0;
for($x;$x<length($ARGV[0]);$x+=2){
	my $c = sprintf("%s", $cifra[$x] . $cifra[$x+1]);
	my $k = sprintf("%s", $hexachave[$y]);
	my $o = sprintf("%s", hex($c) ^ hex($k)); # XOR EBX,EAX
	# CMP EDI,DWORD PTR SS:[EBP-1C]
	# JL SHORT 0061E2F5
	if(hex($aux) < $o){
		$o -= hex($aux); # SUB DWORD PTR SS:[EBP-1C],EDI
	}
	else {
		$o += hex("0FF"); # ADD EAX,0FF
		$o -= hex($aux); # SUB EAX,EDI
	}
	print pack("C",$o);
	$aux = $c;
	$y++; # MOVZX EAX,WORD PTR DS:[EAX+ESI*2-2]
}
print "\n";



